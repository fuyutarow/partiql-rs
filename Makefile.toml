[tasks.hot]
dependencies = ["build:pq"]
_script = '''
echo hello
'''
script = '''
echo $INPUT | ./target/debug/pq -q "$(cat<<EOS
SELECT info
FROM addr_info info
EOS
)" | jq -S
'''

[tasks._hot]
dependencies = ["build:pq"]
_script = '''
echo hello
'''
script = '''
SELECT
  address,
  addr_info.family AS inet,
  addr_info.local
WHERE inet LIKE 'inet%'"
echo $INPUT | ./target/debug/pq -q "$(cat<<EOS
SELECT
  info
FROM addr_info info
EOS
)" | jq -S
'''

[tasks.install-dev]
script = '''
brew install jq jo yj
npm i -g zx
'''

[tasks."build:pq"]
command = "cargo"
args = ["build", "--bin", "pq"]

[tasks.release]
command = "cargo"
args = ["build", "--release"]


[tasks."release:pq"]
command = "cargo"
args = ["build", "--bin", "pq", "--release"]

# not working
[tasks."test:all"]
run_task = [{ name = "test:lib" }, { name = "test:pq" }]

[tasks."test:lib"]
command = "cargo"
args = ["test"]
dependencies = ["build"]

[tasks."test:pq"]
script = '''
zx ./tests/pq/*.mjs
'''
dependencies = ["build:pq"]


[tasks.release-cli]
script = '''
cargo build --release --bin partiql-cli
'''

[tasks.version-up]
script = '''
version-make up -rz Cargo.toml
'''

[tasks.version-tag]
script = '''
git tag v$(version-make show Cargo.toml)
'''

[tasks.version-untag]
script = '''
git tag v$(version-make show Cargo.toml) -d
'''

[tasks.fix]
script = '''
cargo fix
'''


[tasks.generate-json]
dependencies = ["build"]
script = '''
alias pc="./target/debug/partiql-cli"
alias pq="./target/debug/pq"
for i in $(seq 1 18)
do
    cat samples/q$i.env | pc from --to json | pq -S > samples/q$i.json
done
'''
